[{"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\index.js":"1","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\App.js":"2","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Pools.js":"4","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\MyAccount\\MyAccount.js":"5","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\LeaderBoard\\LeaderBoard.js":"6","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Header\\Header.js":"7","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Mobile\\MobileSidebar.js":"8","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Mobile\\MenuItems.js":"9","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Sidebar\\Sidebar.js":"10","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\RewardPool\\RewardPool.js":"11","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\StakingPool\\StakingPool.js":"12","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Components\\PoolBoxHeader.js":"13","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Components\\PoolBoxContent.js":"14","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Components\\Countdown.js":"15","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Components\\ProgressBar.js":"16","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\RewardPool\\RewardPoolDetails.js":"17","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Components\\PoolBoxStats.js":"18","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Components\\AboutPool.js":"19","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\StakingPool\\StakingPoolDetails.js":"20","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Table\\Table.js":"21","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Modal\\Modal.js":"22","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Modal\\ConnectWallet.js":"23","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Modal\\GetTickets.js":"24","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\ContextAPI.js":"25","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Modal\\ConfirmDeposit.js":"26"},{"size":500,"mtime":499162500000,"results":"27","hashOfConfig":"28"},{"size":3758,"mtime":1609229272033,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":1471,"mtime":1609155050252,"results":"31","hashOfConfig":"28"},{"size":7932,"mtime":1608899327820,"results":"32","hashOfConfig":"28"},{"size":2511,"mtime":1608909026446,"results":"33","hashOfConfig":"28"},{"size":3674,"mtime":1609154300619,"results":"34","hashOfConfig":"28"},{"size":4601,"mtime":1609154334282,"results":"35","hashOfConfig":"28"},{"size":1418,"mtime":1609154387599,"results":"36","hashOfConfig":"28"},{"size":561,"mtime":1609157921359,"results":"37","hashOfConfig":"28"},{"size":1244,"mtime":1609229385406,"results":"38","hashOfConfig":"28"},{"size":1233,"mtime":1609229402935,"results":"39","hashOfConfig":"28"},{"size":688,"mtime":1608815046632,"results":"40","hashOfConfig":"28"},{"size":759,"mtime":1608815365986,"results":"41","hashOfConfig":"28"},{"size":2415,"mtime":1608815038644,"results":"42","hashOfConfig":"28"},{"size":629,"mtime":1608815354767,"results":"43","hashOfConfig":"28"},{"size":4209,"mtime":1609155082082,"results":"44","hashOfConfig":"28"},{"size":1278,"mtime":1608815050987,"results":"45","hashOfConfig":"28"},{"size":530,"mtime":1608815033529,"results":"46","hashOfConfig":"28"},{"size":4186,"mtime":1609155117435,"results":"47","hashOfConfig":"28"},{"size":3827,"mtime":1608909350568,"results":"48","hashOfConfig":"28"},{"size":1661,"mtime":1609240654880,"results":"49","hashOfConfig":"28"},{"size":1966,"mtime":1609155273546,"results":"50","hashOfConfig":"28"},{"size":4701,"mtime":1609231019588,"results":"51","hashOfConfig":"28"},{"size":100,"mtime":1609152878516,"results":"52","hashOfConfig":"28"},{"size":1054,"mtime":1609230452849,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1qycmvh",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\index.js",[],["111","112"],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\App.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Pools.js",["113"],"import React, {useEffect, useState, useContext} from 'react'\r\nimport AppContext from '../../ContextAPI';\r\nimport RewardPool from './RewardPool/RewardPool';\r\nimport StakingPool from './StakingPool/StakingPool';\r\n\r\nconst Pools = () => {\r\n    const { setNewTime, dateEnd } = useContext(AppContext);\r\n    const [countdown, setCountdown] = useState({\r\n        days: 0,\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0,\r\n    });\r\n\tconst [percentageTimePassed, setPercentageTimePassed] = useState();\r\n    const dateStart = new Date(\"12/23/2020 11:50:00\").getTime();\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setNewTime(setCountdown);\r\n        }, 1000);\r\n\r\n        if (percentageTimePassed >= 100) {\r\n            clearInterval(interval);\r\n        }\r\n\r\n        setPercentageTimePassed(Math.floor(((new Date().getTime() - dateStart) / (dateEnd - dateStart)) * 100));\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [countdown, percentageTimePassed]);\r\n\r\n    return (\r\n        <div className='lottery-pools-container'>\r\n            <h1 className='title'>Lottery Pools</h1>\r\n            <div className='lottery-pools-section'>\r\n                <RewardPool percentageTimePassed={percentageTimePassed} countdown={countdown} />\r\n                <StakingPool percentageTimePassed={percentageTimePassed} countdown={countdown} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pools;","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\MyAccount\\MyAccount.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\LeaderBoard\\LeaderBoard.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Header\\Header.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Mobile\\MobileSidebar.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Mobile\\MenuItems.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\RewardPool\\RewardPool.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\StakingPool\\StakingPool.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Components\\PoolBoxHeader.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Components\\PoolBoxContent.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Components\\Countdown.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Components\\ProgressBar.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\RewardPool\\RewardPoolDetails.js",["114"],"import React, {useEffect, useState, useContext} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport onlyLogo from '../../../assets/images/onlyLogo.png';\r\nimport arrowToRight from '../../../assets/images/arrowToRight.png';\r\nimport Countdown from '../Components/Countdown';\r\nimport ProgressBar from '../Components/ProgressBar';\r\nimport PoolBoxHeader from '../Components/PoolBoxHeader';\r\nimport AboutPool from '../Components/AboutPool';\r\nimport PoolBoxStats from '../Components/PoolBoxStats';\r\nimport AppContext from '../../../ContextAPI';\r\n\r\nconst RewardPoolDetails = () => {\r\n    const { setNewTime, dateEnd } = useContext(AppContext);\r\n    const [countdown, setCountdown] = useState({\r\n        days: 0,\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0,\r\n    });\r\n    const [percentageTimePassed, setPercentageTimePassed] = useState();\r\n    const dateStart = new Date(\"12/23/2020 11:50:00\").getTime()\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setNewTime(setCountdown);\r\n        }, 1000);\r\n\r\n        if (percentageTimePassed >= 100) {\r\n            clearInterval(interval);\r\n        }\r\n\r\n        setPercentageTimePassed(Math.floor(((new Date().getTime() - dateStart) / (dateEnd - dateStart)) * 100));\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [countdown, percentageTimePassed]);\r\n\r\n    \r\n    return (\r\n        <div className='reward-pool-details-section'>\r\n            <h1 className='reward-pool-details-title'>\r\n                <img src={onlyLogo} alt='Community Reward Pool' /> Community Reward Pool\r\n            </h1>\r\n            <div className='breadcrumbs'>\r\n                <Link to='/'>Lottery Pools</Link>\r\n                <img src={arrowToRight} alt='Right Arrow' />\r\n                <label>Community Reward Pool</label>\r\n            </div>\r\n\r\n            <div className='pools-box-container'>\r\n                <div className='pools-box'>\r\n                    <PoolBoxHeader title='Current Week Prize' />\r\n                    <div className='pools-box-content required-changes'>\r\n                        <div className='pools-box-inner required-changes'>\r\n                            <h1 className='pools-box-inner-title required-changes'>Current Week Prize</h1>\r\n                            <div className='pools-box-screen required-changes'>\r\n                                <div className='pools-box-screen-inner'>\r\n                                    13.48 bond\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='pools-box'>\r\n                    <PoolBoxHeader title='Time Left' />\r\n                    <div className='pools-box-content required-changes'>\r\n                        <div className='pools-box-inner required-changes'>\r\n                            <h1 className='pools-box-inner-title required-changes'>Time Left</h1>\r\n\r\n                            <ProgressBar percentageTimePassed={percentageTimePassed} />\r\n                            <Countdown countdown={countdown} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='pools-box required-changes'>\r\n                <PoolBoxHeader title='Community Reward Pool' />\r\n                <PoolBoxStats\r\n                    winners={'3'}\r\n                    players={'3.045'}\r\n                    totalTickets={'1.342.045'}\r\n                />\r\n            </div>\r\n\r\n            <div className='pools-box'>\r\n                <PoolBoxHeader title='About the Pool' />\r\n                <AboutPool\r\n                    title='About the Pool'\r\n                    description='The Community Reward Pool is set up by BOND founders and the weekly prize in this pool is provided from BOND Community Rewards.'\r\n                    more='Each week the protocol randomly chooses one winner who gets all the sum of the prize. The staked amount of BOND tokens can be withdrawn at any time without any time lockups.'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RewardPoolDetails\r\n","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Components\\PoolBoxStats.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\Components\\AboutPool.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Pools\\StakingPool\\StakingPoolDetails.js",["115"],"import React, {useEffect, useState, useContext} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport onlyLogo from '../../../assets/images/onlyLogo.png';\r\nimport arrowToRight from '../../../assets/images/arrowToRight.png';\r\nimport Countdown from '../Components/Countdown';\r\nimport ProgressBar from '../Components/ProgressBar';\r\nimport PoolBoxHeader from '../Components/PoolBoxHeader';\r\nimport AboutPool from '../Components/AboutPool';\r\nimport PoolBoxStats from '../Components/PoolBoxStats';\r\nimport AppContext from '../../../ContextAPI';\r\n\r\nconst StakingPoolDetails = () => {\r\n    const { setNewTime, dateEnd } = useContext(AppContext);\r\n    const [countdown, setCountdown] = useState({\r\n        days: 0,\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0,\r\n    });\r\n    const [percentageTimePassed, setPercentageTimePassed] = useState();\r\n    const dateStart = new Date(\"12/23/2020 11:50:00\").getTime()\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setNewTime(setCountdown);\r\n        }, 1000);\r\n\r\n        if (percentageTimePassed >= 100) {\r\n            clearInterval(interval);\r\n        }\r\n\r\n        setPercentageTimePassed(Math.floor(((new Date().getTime() - dateStart) / (dateEnd - dateStart)) * 100));\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [countdown, percentageTimePassed]);\r\n\r\n    \r\n    return (\r\n        <div className='reward-pool-details-section'>\r\n            <h1 className='reward-pool-details-title'>\r\n                <img src={onlyLogo} alt='DAO Staking Pool' /> DAO Staking Pool\r\n            </h1>\r\n            <div className='breadcrumbs'>\r\n                <Link to='/'>Lottery Pools</Link>\r\n                <img src={arrowToRight} alt='Right Arrow' />\r\n                <label>DAO Staking Pool</label>\r\n            </div>\r\n\r\n            <div className='pools-box-container'>\r\n                <div className='pools-box'>\r\n                    <PoolBoxHeader title='Current Week Prize' />\r\n                    <div className='pools-box-content required-changes'>\r\n                        <div className='pools-box-inner required-changes'>\r\n                            <h1 className='pools-box-inner-title required-changes'>Current Week Prize</h1>\r\n                            <div className='pools-box-screen required-changes'>\r\n                                <div className='pools-box-screen-inner'>\r\n                                    13.48 bond\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='pools-box'>\r\n                    <PoolBoxHeader title='Time Left' />\r\n                    <div className='pools-box-content required-changes'>\r\n                        <div className='pools-box-inner required-changes'>\r\n                            <h1 className='pools-box-inner-title required-changes'>Time Left</h1>\r\n\r\n                            <ProgressBar percentageTimePassed={percentageTimePassed} />\r\n                            <Countdown countdown={countdown} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='pools-box required-changes'>\r\n                <PoolBoxHeader title='DAO Staking Pool' />\r\n                <PoolBoxStats\r\n                    winners={'3'}\r\n                    players={'3.045'}\r\n                    totalTickets={'1.342.045'}\r\n                />\r\n            </div>\r\n\r\n            <div className='pools-box'>\r\n                <PoolBoxHeader title='About the Pool' />\r\n                <AboutPool\r\n                    title='About the Pool'\r\n                    description='The DAO Staking Pool is set up by BOND founders and the weekly prize in this pool is provided from BOND Community Rewards.'\r\n                    more='Each week the protocol randomly chooses one winner who gets all the sum of the prize. The staked amount of BOND tokens can be withdrawn at any time without any time lockups.'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StakingPoolDetails\r\n","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Table\\Table.js",["116","117"],"import React from 'react'\r\nimport { useTable, usePagination } from 'react-table'\r\nimport PoolBoxHeader from '../Pools/Components/PoolBoxHeader'\r\nimport prevIcon from '../../assets/images/prev.png'\r\nimport nextIcon from '../../assets/images/next.png'\r\n\r\nconst Table = ({title, data, columns, pageSize, seperateThreeWinners = false}) => {\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        state: { pageIndex },\r\n    } = useTable({ columns, data, initialState: { pageIndex: 0, pageSize: pageSize }, }, usePagination);\r\n\r\n\r\n    const displayPages = () => {\r\n        const buttons = [];\r\n        for (let i = 0; i < pageCount; i++) {\r\n            buttons.push(<button key={i} onClick={() => gotoPage(i)} className={pageIndex === i ? 'activePage' : ''}>{i+1}</button>)\r\n        }\r\n        return buttons;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='pools-box'>\r\n                <PoolBoxHeader title={title} />\r\n                <div className='my-account-pool-box-content required-changes'>\r\n                    <table {...getTableProps()} className='table'>\r\n                        <thead>\r\n                            {headerGroups.map(headerGroup => (\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {headerGroup.headers.map(column => (\r\n                                <th\r\n                                    className='table-header'    \r\n                                    {...column.getHeaderProps()}\r\n                                >\r\n                                    {column.render('Header')}\r\n                                </th>\r\n                                ))}\r\n                            </tr>\r\n                            ))}\r\n                        </thead>\r\n                        <tbody {...getTableBodyProps()}>\r\n                            {page.map((row, i) => {\r\n                                prepareRow(row)\r\n                                return (\r\n                                    <tr {...row.getRowProps()} className={(seperateThreeWinners && pageIndex === 0 && i < 3) ? 'seperateThreeWinners' : ''}>\r\n                                    {row.cells.map(cell => {\r\n                                        return (\r\n                                        <td\r\n                                            className={`table-body-columns ${seperateThreeWinners ? 'second-color' : 'third-color'}`}    \r\n                                            {...cell.getCellProps()}\r\n                                        >\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"table-pagination\">\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage} className='prev-next-buttons'>\r\n                    <img src={prevIcon} alt='Previous Page' />\r\n                </button>\r\n                <div className='displayPages'>\r\n                    {displayPages()}\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage} className='prev-next-buttons'>\r\n                    <img src={nextIcon} alt='Next Page' />\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Modal\\Modal.js",["118"],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Modal\\ConnectWallet.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Modal\\GetTickets.js",["119","120","121","122","123"],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\ContextAPI.js",[],"C:\\Users\\User\\Desktop\\projects\\bond-bet\\src\\components\\Modal\\ConfirmDeposit.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":31,"column":8,"nodeType":"130","endLine":31,"endColumn":41,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"129","line":36,"column":8,"nodeType":"130","endLine":36,"endColumn":41,"suggestions":"132"},{"ruleId":"128","severity":1,"message":"129","line":36,"column":8,"nodeType":"130","endLine":36,"endColumn":41,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":16,"column":9,"nodeType":"136","messageId":"137","endLine":16,"endColumn":20},{"ruleId":"134","severity":1,"message":"138","line":21,"column":9,"nodeType":"136","messageId":"137","endLine":21,"endColumn":20},{"ruleId":"139","severity":1,"message":"140","line":13,"column":9,"nodeType":"141","messageId":"142","endLine":23,"endColumn":10},{"ruleId":"134","severity":1,"message":"143","line":22,"column":3,"nodeType":"136","messageId":"137","endLine":22,"endColumn":14},{"ruleId":"144","severity":1,"message":"145","line":58,"column":85,"nodeType":"146","endLine":58,"endColumn":108},{"ruleId":"144","severity":1,"message":"145","line":58,"column":111,"nodeType":"146","endLine":58,"endColumn":134},{"ruleId":"144","severity":1,"message":"145","line":59,"column":64,"nodeType":"146","endLine":59,"endColumn":87},{"ruleId":"144","severity":1,"message":"145","line":59,"column":90,"nodeType":"146","endLine":59,"endColumn":113},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dateEnd', 'dateStart', and 'setNewTime'. Either include them or remove the dependency array.","ArrayExpression",["149"],["150"],["151"],"no-unused-vars","'pageOptions' is assigned a value but never used.","Identifier","unusedVar","'setPageSize' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setPoolType' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"152","fix":"154"},{"desc":"152","fix":"155"},"Update the dependencies array to be: [countdown, dateEnd, dateStart, percentageTimePassed, setNewTime]",{"range":"156","text":"157"},{"range":"158","text":"157"},{"range":"159","text":"157"},[994,1027],"[countdown, dateEnd, dateStart, percentageTimePassed, setNewTime]",[1344,1377],[1345,1378]]