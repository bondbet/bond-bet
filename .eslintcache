[{"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/index.js":"1","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/App.js":"2","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/reportWebVitals.js":"3","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/ContextAPI.js":"4","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Pools.js":"5","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Sidebar/Sidebar.js":"6","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/Modal.js":"7","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/MyAccount/MyAccount.js":"8","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/LeaderBoard/LeaderBoard.js":"9","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Header/Header.js":"10","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/DepositComplete.js":"11","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/ConnectWallet.js":"12","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/ConfirmDeposit.js":"13","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/PrizeAwarded.js":"14","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/GetTickets.js":"15","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/ProgressBar.js":"16","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/AboutPool.js":"17","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/Countdown.js":"18","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/PoolBoxStats.js":"19","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/PoolBoxHeader.js":"20","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Mobile/MobileSidebar.js":"21","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Mobile/MenuItems.js":"22","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Table/Table.js":"23","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/PoolBoxContent.js":"24","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/Router.js":"25","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/WithdrawComplete.js":"26","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/Withdraw.js":"27","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/ConfirmWithdraw.js":"28","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/constants/provider-options.js":"29","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/chain-utils.js":"30","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/chains.js":"31","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/string-utils.js":"32","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/constants/contracts.js":"33","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/ethers.js":"34","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPool.js":"35","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPoolPrizeDetails.js":"36","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPoolPlayerDetails.js":"37","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPoolDetails.js":"38","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Main.js":"39","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Shared/EtherscanLink.js":"40","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/date.js":"41","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Shared/CountdownPercentageUpdater.js":"42"},{"size":500,"mtime":1610092439353,"results":"43","hashOfConfig":"44"},{"size":5462,"mtime":1611583357651,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1610092439353,"results":"46","hashOfConfig":"44"},{"size":96,"mtime":1610092439328,"results":"47","hashOfConfig":"44"},{"size":468,"mtime":1611588157381,"results":"48","hashOfConfig":"44"},{"size":541,"mtime":1610716932672,"results":"49","hashOfConfig":"44"},{"size":2788,"mtime":1610716932662,"results":"50","hashOfConfig":"44"},{"size":10144,"mtime":1611225054000,"results":"51","hashOfConfig":"44"},{"size":3674,"mtime":1611588520938,"results":"52","hashOfConfig":"44"},{"size":4489,"mtime":1611583357652,"results":"53","hashOfConfig":"44"},{"size":1075,"mtime":1611584724642,"results":"54","hashOfConfig":"44"},{"size":1931,"mtime":1610716932660,"results":"55","hashOfConfig":"44"},{"size":1351,"mtime":1611583357654,"results":"56","hashOfConfig":"44"},{"size":3295,"mtime":1610716932663,"results":"57","hashOfConfig":"44"},{"size":6539,"mtime":1611583357657,"results":"58","hashOfConfig":"44"},{"size":612,"mtime":1610716932665,"results":"59","hashOfConfig":"44"},{"size":515,"mtime":1610092439349,"results":"60","hashOfConfig":"44"},{"size":2477,"mtime":1611585009387,"results":"61","hashOfConfig":"44"},{"size":1725,"mtime":1610716932665,"results":"62","hashOfConfig":"44"},{"size":664,"mtime":1610092439349,"results":"63","hashOfConfig":"44"},{"size":5499,"mtime":1610716932659,"results":"64","hashOfConfig":"44"},{"size":1374,"mtime":1610716932659,"results":"65","hashOfConfig":"44"},{"size":4353,"mtime":1610716932672,"results":"66","hashOfConfig":"44"},{"size":737,"mtime":1610716932665,"results":"67","hashOfConfig":"44"},{"size":1566,"mtime":1611587596545,"results":"68","hashOfConfig":"44"},{"size":1127,"mtime":1611583357658,"results":"69","hashOfConfig":"44"},{"size":2708,"mtime":1611225054000,"results":"70","hashOfConfig":"44"},{"size":1156,"mtime":1611583357655,"results":"71","hashOfConfig":"44"},{"size":300,"mtime":1611160506161,"results":"72","hashOfConfig":"44"},{"size":585,"mtime":1611222195650,"results":"73","hashOfConfig":"44"},{"size":4501,"mtime":1611583357686,"results":"74","hashOfConfig":"44"},{"size":129,"mtime":1611160506164,"results":"75","hashOfConfig":"44"},{"size":268,"mtime":1611583357685,"results":"76","hashOfConfig":"44"},{"size":759,"mtime":1611160506164,"results":"77","hashOfConfig":"44"},{"size":1677,"mtime":1611585691821,"results":"78","hashOfConfig":"44"},{"size":6404,"mtime":1611161946026,"results":"79","hashOfConfig":"44"},{"size":3170,"mtime":1611161946025,"results":"80","hashOfConfig":"44"},{"size":9402,"mtime":1611588116303,"results":"81","hashOfConfig":"44"},{"size":6439,"mtime":1611588336059,"results":"82","hashOfConfig":"44"},{"size":514,"mtime":1611583357661,"results":"83","hashOfConfig":"44"},{"size":245,"mtime":1611583357686,"results":"84","hashOfConfig":"44"},{"size":1290,"mtime":1611587635407,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1djfqxv",{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/index.js",[],["179","180"],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/App.js",["181","182","183","184"],"import React, { useState, useEffect, useCallback } from 'react';\nimport './assets/css/App.css';\nimport './assets/css/Responsive.css';\nimport { Web3Provider } from '@ethersproject/providers';\nimport Web3Modal from 'web3modal';\nimport { getChainData } from './helpers/chain-utils';\nimport { getProviderOptions } from './constants/provider-options';\nimport Main from './components/Main';\nimport BarnBridgeToken from './constants/abis/BarnBridgeToken.json'\nimport {getContract} from './helpers/ethers'\nimport {BARN_PRIZE_POOL_ADDRESS, PRIZE_STRATEGY_CONTRACT_ADDRESS, BOND_TICKETS_CONTRACT_ADDRESS} from './constants/contracts'\nimport BarnPrizePool from './constants/abis/BarnPrizePool.json'\nimport PrizeStrategy from './constants/abis/PeriodicPrizeStrategy.json';\nimport ControlledToken from './constants/abis/ControlledToken.json';\n\nconst App = () => {\n\tconst [provider, setProvider] = useState(null);\n\tconst [connected, setConnected] = useState(false);\n\tconst [connectedNetwork, setConnectedNetwork] = useState('');\n\tconst [connectedWalletAddress, setConnectedWalletAddress] = useState('');\n\tconst [connectedWalletName, setConnectedWalletName] = useState('');\n\tconst [chainId, setChainId] = useState(1);\n\tconst [barnPrizePoolContract, setBarnPrizePoolContract] = useState(null)\n\tconst [bondTokenContract, setBondTokenContract] = useState(null);\n\tconst [bondTicketsContract, setBondTicketsContrat] = useState(null);\n\tconst [prizeStrategyContract, setPrizeStrategyContract] = useState(null);\n\n\tconst getNetwork = () => getChainData(chainId).network;\n\n\tconst web3Modal = new Web3Modal({\n\t\tnetwork: getNetwork(),\n\t\tcacheProvider: true,\n\t\tproviderOptions: getProviderOptions()\n\t  });\n\n\t\n \n\tuseEffect(() => {\n\t\tif (web3Modal.cachedProvider) {\n\t\t\tconnectWalletHandler()\n\t\t  }\n\t}, []);\n\n\tlet firstInit = true;\n\tconst connectWalletHandler = useCallback(async () => {\n\t\tif(!firstInit) {\n\t\t\tweb3Modal.clearCachedProvider();\n\t\t\t\n\t\t}\n\t\tfirstInit = false;\n\t\tlet newProvider =  await web3Modal.connect();\n\n\t\tconst library = new Web3Provider(newProvider);\n\t\tconst network = await library.getNetwork();\n\t\n\t\tconst address = newProvider.selectedAddress ? newProvider.selectedAddress : newProvider?.accounts[0];\n\n\t\tconst barnPrizePoolContractCode = await  library.getCode(BARN_PRIZE_POOL_ADDRESS);\n\t\tif(barnPrizePoolContractCode.length > 2) {\n\t\t\tconst newBarnPrizePoolContract = getContract(BARN_PRIZE_POOL_ADDRESS, BarnPrizePool.abi, library, address);\n\n\t\n\t\t\tconst bondTokenAddress = await newBarnPrizePoolContract.token();\n\t\t\n\t\t\tconst newBondTokenContract = getContract(bondTokenAddress, BarnBridgeToken.abi, library, address);\n\t\t\tconst newPrizeStrategyContract = getContract(PRIZE_STRATEGY_CONTRACT_ADDRESS, PrizeStrategy.abi, library, address);\n\t\t\tconst newBondTicketsContract = getContract(BOND_TICKETS_CONTRACT_ADDRESS, ControlledToken.abi, library, address);\n\n\t\t\tsetPrizeStrategyContract(newPrizeStrategyContract);\n\t\t\tsetBarnPrizePoolContract(newBarnPrizePoolContract);\n\t\t\tsetBondTokenContract(newBondTokenContract);\n\t\t\tsetBondTicketsContrat(newBondTicketsContract);\n\t\t}\n\t\t\n\n\t\tsetConnectedWalletAddress(address);\n\t\tsetConnectedNetwork(network.name);\n\t\tsetConnectedWalletName(library.connection.url === 'metamask' ? 'MetaMask' : 'WalletConnect')\n\t\tsetConnected(true);\n\t\tsetProvider(newProvider)\n\t\tawait subscribeToProviderEvents(newProvider);\n\n\t});\n\n\tconst disconnectWalletHandler = useCallback(async (provider) => {\n\n\t\tweb3Modal.clearCachedProvider();\n\t\t   \n\t\tlocalStorage.removeItem(\"WEB3_CONNECT_CACHED_PROVIDER\");\n\t\tlocalStorage.removeItem(\"walletconnect\");\n\n\n\t\tsetBarnPrizePoolContract(null);\n\t\tsetBondTokenContract(null);\n\t\tsetBondTicketsContrat(null);\n\t\tsetPrizeStrategyContract(null);\n\t\tsetConnectedWalletAddress(\"\");\n\t\tsetConnectedNetwork(null);\n\t\tsetConnectedWalletName(\"\");\n\t\tsetConnected(false);\n\t\tsetProvider(null)\n\t\tawait unsubscribeToProviderEvents(provider);\n\t\t\n\t\t\n\t});\n\n\tconst changedAccount = (accounts) => {\n\t\tif(Array.isArray(accounts) && accounts.length >0) {\n\t\t\tsetConnectedWalletAddress(accounts[0]);\n\t\t} else {\n\t\t\tdisconnectWalletHandler()\n\t\t}\n\t}\n\n\tconst networkChanged = useCallback(async (provider) => {\n\t\tconst library = new Web3Provider(provider);\n\t\tconst network = await library.getNetwork();\n\t\tconst chainId = network.chainId;\n  \n\n\t\tsetChainId(chainId);\n\t\tsetConnectedNetwork(network.name);\n\t  });\n\tconst subscribeToProviderEvents = (provider) => {\n\n\t\tif(provider) {\n\t\t\tif (!provider.on) {\n\t\t\t\treturn;\n\t\t\t  }\n\n\t\t\t  provider.on(\"accountsChanged\", changedAccount);\n\t\t\t  provider.on(\"disconnect\", disconnect);\n\t\t\t  provider.on(\"networkChanged\", () => networkChanged(provider));\n\t\t}\n\t\t\n\t};\n\tconst disconnect = async (err) => {\n\t\tdisconnectWalletHandler();\n\t  }\n\n\tconst unsubscribeToProviderEvents = (provider) => {\n\t\tif (!provider) {\n\t\t\treturn;\n\t\t  }\n\n\t\t  provider.off(\"accountsChanged\", changedAccount);\n\t\t  provider.off(\"networkChanged\", () => networkChanged(provider));\n\t\t  provider.off(\"disconnect\", disconnect);\n\t}\n\treturn (\n\t\t<Main \n\t\t\tbondTicketsContract={bondTicketsContract}\n\t\t\tprizeStrategyContract={prizeStrategyContract}\n\t\t\tbarnPrizePoolContract={barnPrizePoolContract}\n\t\t\tbondTokenContract={bondTokenContract}\n\t\t\tprovider={provider} \n\t\t\tconnectedNetwork={connectedNetwork} \n\t\t\tconnectedWalletAddress={connectedWalletAddress}\n\t\t\tconnectedWalletName={connectedWalletName}\n\t\t\tconnected={connected}\n\t\t\tdisconnectWalletHandler={disconnectWalletHandler}\n\t\t\tconnectWalletHandler={connectWalletHandler}\n\t\t></Main>\n\t)\n\n}\n\nexport default App;\n\n\n\n\n\n","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/reportWebVitals.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/ContextAPI.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Pools.js",["185","186","187","188"],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Sidebar/Sidebar.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/Modal.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/MyAccount/MyAccount.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/LeaderBoard/LeaderBoard.js",["189","190"],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Header/Header.js",["191"],"import React, {useState, useContext, useEffect, useRef} from 'react'\nimport MobileSidebar from '../Mobile/MobileSidebar';\nimport appLogo from '../../assets/images/app-logo.svg';\nimport noLossLotteryImg from '../../assets/images/no-loss-lottery.svg';\nimport hamburgerIcon from '../../assets/images/hamburger.svg';\nimport prizeImg from '../../assets/images/prize.svg';\nimport statusImg from '../../assets/images/status.svg';\nimport walletImg from '../../assets/images/wallet.svg';\nimport networkImg from '../../assets/images/network.svg';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../../ContextAPI';\nimport { capitalize } from '../../helpers/string-utils';\n\nconst Header = () => {\n    const [openDropdown, setOpenDropdown] = useState(false);\n    const { connected, provider, connectedWalletName, toggleSidebar, setToggleSidebar, wallet, setSelectedMenuItem, connectWalletHandler, connectedWalletAddress, connectedNetwork, disconnectWalletHandler } = useContext(AppContext);\n    const ref = useRef(null);\n\n    const handleClickOutside = (event) => {\n        if (!event.target.classList.contains('dropdownOpened')) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                setOpenDropdown(false);\n            }\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside, true);\n        return () => {\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n    })\n\n    return (\n        <header>\n            <div className='app-logo'>\n                <Link to='/' onClick={() => setSelectedMenuItem(0)}>\n                    <img src={appLogo} alt='app-logo' />\n                </Link>\n            </div>\n            <div className='no-loss-lottery'>\n                <img src={noLossLotteryImg} alt='No Loss Lottery' />\n                <h2>No Loss Lottery</h2>\n            </div>\n            <div className='connect-wallet'>\n                {!connected ?\n                    <button onClick={connectWalletHandler}>Connect wallet</button> :\n                    <div className='connected'>\n                        <button onClick={() => setOpenDropdown(!openDropdown)} className={openDropdown ? 'dropdownOpened' : ''}>\n                            <img src={prizeImg} alt='Prize' /> {connectedWalletAddress.substring(0,5) + \"...\" + connectedWalletAddress.substring(connectedWalletAddress.length - 6, connectedWalletAddress.length)}\n                        </button>\n                        {openDropdown && \n                            <div ref={ref} className='dropdown'>\n                                <div className='dropdown-row'>\n                                    <div className='dropdown-text'>\n                                        <img src={statusImg} alt='Status' /> Status\n                                    </div>\n                                    <div className='status'>Connected</div>\n                                </div>\n                                <div className='dropdown-row'>\n                                    <div className='dropdown-text'>\n                                        <img src={walletImg} alt='Wallet' /> Wallet\n                                    </div>\n                                    <div className='wallet'>{connectedWalletName}</div>\n                                </div>\n                                <div className='dropdown-row'>\n                                    <div className='dropdown-text'>\n                                        <img src={networkImg} alt='Network' /> Network\n                                    </div>\n                                    <div className='network'>{capitalize(connectedNetwork)}</div>\n                                </div>\n                                <div className='disconnect-button'>\n                                    <button onClick={() => disconnectWalletHandler(provider)}>Disconnect</button>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                }\n            </div>\n\n            <div className='mobile-menu'>\n                <button className='open-sidebar' onClick={() => setToggleSidebar(!toggleSidebar)}>\n                    <img src={hamburgerIcon} alt='Hamburger Icon' />\n                </button>\n                {toggleSidebar &&\n                    <MobileSidebar />\n                }\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/DepositComplete.js",["192","193"],"import React, {useContext, useState, useEffect} from 'react';\nimport AppContext from '../../ContextAPI';\nimport Countdown from '../Pools/Components/Countdown';\nimport PoolBoxHeader from '../Pools/Components/PoolBoxHeader';\nimport { ethers } from 'ethers';\n\nconst DepositComplete = () => {\n    const { ticketsBalance } = useContext(AppContext);\n\n\n    return (\n      \n                <div className='pools-box'>\n                    <PoolBoxHeader title='Deposit Complete' />\n                    <div className='box-content'>\n                        <div className='box-inner'>\n                            <h1 className='modal-title'>Deposit Complete</h1>\n                        {ticketsBalance ? <h4 className='modal-description'>You got total of {ethers.utils.formatEther(ticketsBalance)} tickets</h4> : null}\n                            <p className='prize-will-be-awarded-in'>The prize will be awarded in:</p>\n                            <Countdown/>\n                        </div>\n                    </div>\n                </div>\n\n    )\n}\n\nexport default DepositComplete\n","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/ConnectWallet.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/ConfirmDeposit.js",["194","195"],"import React, {useContext} from 'react';\nimport AppContext from '../../ContextAPI';\nimport PoolBoxHeader from '../Pools/Components/PoolBoxHeader';\nimport loading from '../../assets/images/loading.svg';\nimport EtherscanLink from '../Shared/EtherscanLink';\n\n\nconst ConfirmDeposit = () => {\n    const { ticketAmountRP, poolType , getTicketsTxId, getTicketsLoading} = useContext(AppContext);\n\n    return (\n        <div className='pools-box'>\n            <PoolBoxHeader title='Confirm deposit' />\n            <div className='box-content'>\n                <div className='box-inner'>\n                {!getTicketsLoading ? \n                <div>\n                    <h1 className='modal-title'>Confirm deposit in your wallet</h1>\n                    <h4 className='modal-description'>Deposit {ticketAmountRP} BOND for {ticketAmountRP} tickets</h4>\n                    <div className='confirm-deposit-loading'> </div>\n                 </div>\n                        : <div>\n\n                            <h4 className='modal-description'>Depositing...</h4>\n                            <EtherscanLink txId={getTicketsTxId}> </EtherscanLink> \n\n                            \n                        </div>\n\n                }\n                      \n                   \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ConfirmDeposit\n","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/PrizeAwarded.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/GetTickets.js",["196","197","198","199","200"],"import React, {useContext, useEffect, useState} from 'react';\nimport PoolBoxHeader from '../Pools/Components/PoolBoxHeader';\nimport walletIcon from '../../assets/images/wallet-sm.svg';\nimport logo from '../../assets/images/onlyLogo.svg';\nimport closeIcon from '../../assets/images/close.svg';\nimport minusIcon from '../../assets/images/minus.svg';\nimport AppContext from '../../ContextAPI';\nimport validator from 'validator';\nimport * as ethers from 'ethers';\nimport EtherscanLink from '../Shared/EtherscanLink';\nimport { getProviderDescription } from 'web3modal';\n\n\n\n\nconst GetTickets = () => {\n    const {\n        bondAllowance,\n        allowBondHandler,\n        bondBalance,\n        connected,\n        ticketDepositHandler,\n        getTicketsLoading,\n        getTicketsTxId,\n        totalTicketAmount,\n        ticketsBalance\n    } = useContext(AppContext);\n\n\tconst [tokenIsEnabled, setTokenIsEnabled] = useState(false);\n\tconst [maxAmountSelected, setMaxAmountSelected] = useState(false);\n\tconst [withdrawAmount, setWithdrawAmount] = useState('');\n    const [inputValid, setInputValid] = useState(false);\n    const [depositAmount, setDepositAmount] = useState(0);\n\n    useEffect(() => {\n        if(bondAllowance ){\n            setTokenIsEnabled(bondAllowance.gt(0) )\n        }\n    },[bondAllowance])\n    const handleTicketInputChange = (value) => {\n        \n        if(value === '' || (validator.isNumeric(value) && !value.startsWith('0'))) {\n            setDepositAmount(value);\n            const balanceInBigNumber = ethers.utils.parseEther(value || '0');\n            const hasEnoughBond = ethers.utils.parseEther(value || '0').lte(bondBalance);\n            setInputValid(balanceInBigNumber.gt('0') && hasEnoughBond);\n            if(hasEnoughBond) {\n                setMaxAmountSelected(balanceInBigNumber.eq(ethers.BigNumber.from(bondBalance)));\n            }\n        }\n    \n    };\n\n    const getOdds = () => {\n\n        const currentTotalTickets = +depositAmount + +ethers.utils.formatEther(totalTicketAmount);\n        const currentTicketsBalance = +depositAmount +  +ethers.utils.formatEther(ticketsBalance);\n\n        console.log(currentTotalTickets, currentTicketsBalance)\n        return ((currentTotalTickets ? currentTotalTickets : 1)/ (currentTicketsBalance ? currentTicketsBalance : 1)).toFixed(2);\n    }\n    return (\n        <div className='pools-box'>\n            <PoolBoxHeader title='Get Tickets' />\n            <div className='box-content'>\n                <div className='box-inner'>\n                    <h1 className='modal-title'>Get Tickets</h1>\n                    <h4 className='modal-description'>1 BOND = 1 ticket</h4>\n                    {connected &&\n                        <div className='token'>\n                            <h1>\n                                <img src={logo} alt='App Logo' /> Bond\n                            </h1>\n                            {getTicketsLoading ? <EtherscanLink txId={getTicketsTxId}> </EtherscanLink> : null }\n                            <h2>{ tokenIsEnabled ? 'Token enabled' : 'Enable token'}\n                                <input\n                                    checked={tokenIsEnabled}\n                                    onChange={allowBondHandler}\n                                    disabled={tokenIsEnabled}\n                                    className='switch-checkbox'\n                                    id={'switch-new'+'RP'}\n                                    type='checkbox'\n                                />\n                                <label\n                                    style={{ background:  tokenIsEnabled  && '#28D879' }}\n                                    className='switch-label'\n                                    htmlFor={'switch-new'+\"RP\"}\n                                >\n                                    <span className='switch-button'>\n                                        {\n                                            (tokenIsEnabled ? <img src={minusIcon} alt='Minus' /> : <img src={closeIcon} alt='Close' />) \n                                        }\n                                    </span>\n                                </label>\n                            </h2>\n                        </div>\n                    }\n                    <div className='ticket-amount'>\n                        <div className='ticket-amount-label'>\n                            <div>Ticket amount:</div>\n                            {connected &&\n                                <div>\n                                    <img src={walletIcon} alt='Wallet' /> {`${ethers.utils.formatEther(bondBalance)} BOND`}\n                                </div>\n                            }\n                        </div>\n                        <div className='ticket-amount-input'>\n                            <input\n                                type='text'\n                                disabled={!(connected  && tokenIsEnabled ) }\n                                onChange={ (event) => {\n                                    if(event && event.target) {\n                                            handleTicketInputChange(event.target.value)                        \n                                    }\n                            \n                                }\n                                   \n                                }\n                                value={depositAmount}\n                            />\n                            {connected ?\n                                (tokenIsEnabled && !maxAmountSelected) && <button className='max-btn' onClick={() => { setDepositAmount(+ethers.utils.formatEther(bondBalance)); setInputValid(true); setMaxAmountSelected(true) }}>MAX</button> : null\n                            }\n                        </div>\n                    </div>\n                    {\n                        totalTicketAmount !== undefined && ticketsBalance !== undefined ?  \n                        <div className='odds'>\n                            { depositAmount > 0 ? <div>New odds of winning:</div> : <div>Odds of winning:</div>}\n                            \n                            <div>1 in {getOdds()}</div>\n                        </div>\n                        : null\n                    }\n                   \n                </div>\n            </div>\n\n            <div className='continue-btn'>\n                {<button onClick={() => ticketDepositHandler(depositAmount)} disabled={!inputValid}>Deposit</button>}\n            </div>\n        </div>\n    )\n}\n\nexport default GetTickets\n","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/ProgressBar.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/AboutPool.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/Countdown.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/PoolBoxStats.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/PoolBoxHeader.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Mobile/MobileSidebar.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Mobile/MenuItems.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Table/Table.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/PoolBoxContent.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/Router.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/WithdrawComplete.js",["201"],"import React, {useContext} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport AppContext from '../../ContextAPI';\nimport PoolBoxHeader from '../Pools/Components/PoolBoxHeader';\n\nconst WithdrawComplete = () => {\n    const {\n        setSelectedMenuItem,\n        setOpenModal,\n        totalTicketAmountRP,\n        poolType\n    } = useContext(AppContext);\n    const history = useHistory();\n\n    return (\n        <div className='pools-box'>\n            <PoolBoxHeader title='Complete' />\n            <div className='box-content'>\n                <div className='box-inner withdraw'>\n                    <h1 className='modal-title required-changes'>Withdrawal Complete</h1>\n                    <h4 className='modal-description withdraw'>Your balance: <b>{totalTicketAmountRP} tickets</b></h4>\n                </div>\n                <div className='view-leaderboard'>\n                    <button onClick={() => { setSelectedMenuItem(1); setOpenModal(false); history.push('/my-account');  }}>Back to My account</button>\n                </div>\n            </div> \n        </div>\n    )\n}\n\nexport default WithdrawComplete\n","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/Withdraw.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/ConfirmWithdraw.js",["202"],"import React, {useContext} from 'react'\nimport AppContext from '../../ContextAPI';\nimport PoolBoxHeader from '../Pools/Components/PoolBoxHeader';\n\nconst ConfirmWithdraw = () => {\n    const {\n        withdrawAmountRP,\n        poolType,\n        setModalType,\n        setWithdrawAmountRP,\n    } = useContext(AppContext);\n\n    return (\n        <div className='pools-box'>\n            <PoolBoxHeader title='Confirm' />\n            <div className='box-content'>\n                <div className='box-inner withdraw'>\n                    <h1 className='modal-title required-changes'>Confirm withdrawal of tickets</h1>\n                    <h4 className='modal-description withdraw'>Amount to be withdrawn: <b>{withdrawAmountRP} tickets/BOND</b></h4>\n                    <p className='modal-description-sm withdraw'>Withdrawing everything will make you ineligible to win</p>\n                </div>\n                <div className='view-leaderboard'>\n                    <button onClick={() => { setModalType('WDC'); setWithdrawAmountRP('')}}>Confirm withdrawal</button>\n                </div>\n            </div> \n        </div>\n    )\n}\n\nexport default ConfirmWithdraw\n","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/constants/provider-options.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/chain-utils.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/chains.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/string-utils.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/constants/contracts.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/ethers.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPool.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPoolPrizeDetails.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPoolPlayerDetails.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPoolDetails.js",["203","204"],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Main.js",["205","206","207","208","209","210","211"],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Shared/EtherscanLink.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/date.js",["212"],"export const getUtcTimestamp = () => {\n    let now = new Date;\n    return Date.UTC(now.getUTCFullYear(),now.getUTCMonth(), now.getUTCDate() , \n      now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds(), now.getUTCMilliseconds()) / 1000;\n}","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Shared/CountdownPercentageUpdater.js",["213","214","215"],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":42,"column":5,"nodeType":"222","endLine":42,"endColumn":7,"suggestions":"223"},{"ruleId":"220","severity":1,"message":"224","line":45,"column":31,"nodeType":"225","endLine":45,"endColumn":42},{"ruleId":"220","severity":1,"message":"224","line":85,"column":34,"nodeType":"225","endLine":85,"endColumn":45},{"ruleId":"220","severity":1,"message":"224","line":115,"column":25,"nodeType":"225","endLine":115,"endColumn":36},{"ruleId":"226","severity":1,"message":"227","line":1,"column":16,"nodeType":"225","messageId":"228","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"229","line":1,"column":27,"nodeType":"225","messageId":"228","endLine":1,"endColumn":35},{"ruleId":"226","severity":1,"message":"230","line":1,"column":37,"nodeType":"225","messageId":"228","endLine":1,"endColumn":47},{"ruleId":"226","severity":1,"message":"231","line":2,"column":8,"nodeType":"225","messageId":"228","endLine":2,"endColumn":18},{"ruleId":"226","severity":1,"message":"232","line":64,"column":11,"nodeType":"225","messageId":"228","endLine":64,"endColumn":18},{"ruleId":"226","severity":1,"message":"233","line":98,"column":11,"nodeType":"225","messageId":"228","endLine":98,"endColumn":21},{"ruleId":"226","severity":1,"message":"234","line":16,"column":88,"nodeType":"225","messageId":"228","endLine":16,"endColumn":94},{"ruleId":"226","severity":1,"message":"229","line":1,"column":28,"nodeType":"225","messageId":"228","endLine":1,"endColumn":36},{"ruleId":"226","severity":1,"message":"227","line":1,"column":38,"nodeType":"225","messageId":"228","endLine":1,"endColumn":47},{"ruleId":"226","severity":1,"message":"235","line":4,"column":8,"nodeType":"225","messageId":"228","endLine":4,"endColumn":15},{"ruleId":"226","severity":1,"message":"236","line":9,"column":29,"nodeType":"225","messageId":"228","endLine":9,"endColumn":37},{"ruleId":"226","severity":1,"message":"237","line":11,"column":10,"nodeType":"225","messageId":"228","endLine":11,"endColumn":32},{"ruleId":"226","severity":1,"message":"238","line":31,"column":9,"nodeType":"225","messageId":"228","endLine":31,"endColumn":23},{"ruleId":"226","severity":1,"message":"239","line":31,"column":25,"nodeType":"225","messageId":"228","endLine":31,"endColumn":42},{"ruleId":"240","severity":1,"message":"241","line":81,"column":53,"nodeType":"242","messageId":"243","endLine":81,"endColumn":54},{"ruleId":"240","severity":1,"message":"241","line":87,"column":58,"nodeType":"242","messageId":"243","endLine":87,"endColumn":59},{"ruleId":"226","severity":1,"message":"236","line":11,"column":9,"nodeType":"225","messageId":"228","endLine":11,"endColumn":17},{"ruleId":"226","severity":1,"message":"236","line":8,"column":9,"nodeType":"225","messageId":"228","endLine":8,"endColumn":17},{"ruleId":"226","severity":1,"message":"227","line":1,"column":16,"nodeType":"225","messageId":"228","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"229","line":1,"column":27,"nodeType":"225","messageId":"228","endLine":1,"endColumn":35},{"ruleId":"220","severity":1,"message":"244","line":35,"column":15,"nodeType":"245","endLine":47,"endColumn":6},{"ruleId":"220","severity":1,"message":"246","line":47,"column":8,"nodeType":"222","endLine":47,"endColumn":87,"suggestions":"247"},{"ruleId":"220","severity":1,"message":"244","line":49,"column":15,"nodeType":"245","endLine":55,"endColumn":6},{"ruleId":"220","severity":1,"message":"244","line":57,"column":15,"nodeType":"245","endLine":62,"endColumn":6},{"ruleId":"220","severity":1,"message":"224","line":63,"column":30,"nodeType":"225","endLine":63,"endColumn":41},{"ruleId":"220","severity":1,"message":"224","line":108,"column":34,"nodeType":"225","endLine":108,"endColumn":45},{"ruleId":"226","severity":1,"message":"248","line":113,"column":15,"nodeType":"225","messageId":"228","endLine":113,"endColumn":22},{"ruleId":"249","severity":1,"message":"250","line":2,"column":15,"nodeType":"251","messageId":"252","endLine":2,"endColumn":23,"fix":"253"},{"ruleId":"226","severity":1,"message":"254","line":1,"column":8,"nodeType":"225","messageId":"228","endLine":1,"endColumn":13},{"ruleId":"226","severity":1,"message":"229","line":1,"column":27,"nodeType":"225","messageId":"228","endLine":1,"endColumn":35},{"ruleId":"220","severity":1,"message":"255","line":33,"column":8,"nodeType":"222","endLine":33,"endColumn":92,"suggestions":"256"},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'connectWalletHandler' and 'web3Modal.cachedProvider'. Either include them or remove the dependency array.","ArrayExpression",["259"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'useEffect' is defined but never used.","unusedVar","'useState' is defined but never used.","'useContext' is defined but never used.","'AppContext' is defined but never used.","'sp_data' is assigned a value but never used.","'sp_columns' is assigned a value but never used.","'wallet' is assigned a value but never used.","'loading' is defined but never used.","'poolType' is assigned a value but never used.","'getProviderDescription' is defined but never used.","'withdrawAmount' is assigned a value but never used.","'setWithdrawAmount' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.bondTicketsContract'. Either include it or remove the dependency array.",["260"],"'deposit' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"261","text":"262"},"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'prizePoolRemainingSeconds', 'setCountdown', and 'setPercentageTimePassed'. Either include them or remove the dependency array.",["263"],"no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},[61,61],"()",{"desc":"268","fix":"269"},"Update the dependencies array to be: [connectWalletHandler, web3Modal.cachedProvider]",{"range":"270","text":"271"},"Update the dependencies array to be: [props.connectedWalletAddress, props.bondTokenContract, props.connectedNetwork, props.bondTicketsContract]",{"range":"272","text":"273"},"Update the dependencies array to be: [countdown, percentageTimePassed, prizePeriodStartedAt, prizePeriodEnds, setNewTime, prizePoolRemainingSeconds, setPercentageTimePassed, setCountdown]",{"range":"274","text":"275"},[1772,1774],"[connectWalletHandler, web3Modal.cachedProvider]",[2173,2252],"[props.connectedWalletAddress, props.bondTokenContract, props.connectedNetwork, props.bondTicketsContract]",[1139,1223],"[countdown, percentageTimePassed, prizePeriodStartedAt, prizePeriodEnds, setNewTime, prizePoolRemainingSeconds, setPercentageTimePassed, setCountdown]"]