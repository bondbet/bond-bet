[{"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/index.js":"1","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/App.js":"2","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/reportWebVitals.js":"3","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/ContextAPI.js":"4","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Pools.js":"5","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Sidebar/Sidebar.js":"6","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/Modal.js":"7","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/MyAccount/MyAccount.js":"8","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/LeaderBoard/LeaderBoard.js":"9","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Header/Header.js":"10","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/DepositComplete.js":"11","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/ConnectWallet.js":"12","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/ConfirmDeposit.js":"13","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/PrizeAwarded.js":"14","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/GetTickets.js":"15","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/ProgressBar.js":"16","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/AboutPool.js":"17","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/Countdown.js":"18","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/PoolBoxStats.js":"19","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/PoolBoxHeader.js":"20","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Mobile/MobileSidebar.js":"21","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Mobile/MenuItems.js":"22","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Table/Table.js":"23","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/PoolBoxContent.js":"24","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/Router.js":"25","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/WithdrawComplete.js":"26","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/Withdraw.js":"27","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/ConfirmWithdraw.js":"28","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/constants/provider-options.js":"29","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/chain-utils.js":"30","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/chains.js":"31","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/constants/contracts.js":"32","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/ethers.js":"33","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPool.js":"34","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPoolPrizeDetails.js":"35","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPoolPlayerDetails.js":"36","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPoolDetails.js":"37","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Main.js":"38","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Shared/EtherscanLink.js":"39","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/date.js":"40","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Shared/CountdownPercentageUpdater.js":"41","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/format-utils.js":"42"},{"size":500,"mtime":1610092439353,"results":"43","hashOfConfig":"44"},{"size":5157,"mtime":1611653083072,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1610092439353,"results":"46","hashOfConfig":"44"},{"size":96,"mtime":1610092439328,"results":"47","hashOfConfig":"44"},{"size":468,"mtime":1611588157381,"results":"48","hashOfConfig":"44"},{"size":541,"mtime":1610716932672,"results":"49","hashOfConfig":"44"},{"size":2788,"mtime":1610716932662,"results":"50","hashOfConfig":"44"},{"size":9789,"mtime":1611659734222,"results":"51","hashOfConfig":"44"},{"size":3674,"mtime":1611588520938,"results":"52","hashOfConfig":"44"},{"size":4489,"mtime":1611649889638,"results":"53","hashOfConfig":"44"},{"size":1075,"mtime":1611584724642,"results":"54","hashOfConfig":"44"},{"size":1931,"mtime":1610716932660,"results":"55","hashOfConfig":"44"},{"size":1286,"mtime":1611656813982,"results":"56","hashOfConfig":"44"},{"size":3295,"mtime":1610716932663,"results":"57","hashOfConfig":"44"},{"size":6415,"mtime":1611656812551,"results":"58","hashOfConfig":"44"},{"size":612,"mtime":1610716932665,"results":"59","hashOfConfig":"44"},{"size":515,"mtime":1610092439349,"results":"60","hashOfConfig":"44"},{"size":2477,"mtime":1611585009387,"results":"61","hashOfConfig":"44"},{"size":1725,"mtime":1610716932665,"results":"62","hashOfConfig":"44"},{"size":664,"mtime":1610092439349,"results":"63","hashOfConfig":"44"},{"size":5499,"mtime":1610716932659,"results":"64","hashOfConfig":"44"},{"size":1374,"mtime":1610716932659,"results":"65","hashOfConfig":"44"},{"size":4353,"mtime":1610716932672,"results":"66","hashOfConfig":"44"},{"size":737,"mtime":1610716932665,"results":"67","hashOfConfig":"44"},{"size":1566,"mtime":1611587596545,"results":"68","hashOfConfig":"44"},{"size":1192,"mtime":1611659677634,"results":"69","hashOfConfig":"44"},{"size":3204,"mtime":1611657315361,"results":"70","hashOfConfig":"44"},{"size":1203,"mtime":1611658988763,"results":"71","hashOfConfig":"44"},{"size":300,"mtime":1611160506161,"results":"72","hashOfConfig":"44"},{"size":585,"mtime":1611222195650,"results":"73","hashOfConfig":"44"},{"size":4501,"mtime":1611583357686,"results":"74","hashOfConfig":"44"},{"size":268,"mtime":1611583357685,"results":"75","hashOfConfig":"44"},{"size":903,"mtime":1611649021453,"results":"76","hashOfConfig":"44"},{"size":1677,"mtime":1611585691821,"results":"77","hashOfConfig":"44"},{"size":6404,"mtime":1611161946026,"results":"78","hashOfConfig":"44"},{"size":3170,"mtime":1611161946025,"results":"79","hashOfConfig":"44"},{"size":9494,"mtime":1611650078469,"results":"80","hashOfConfig":"44"},{"size":7764,"mtime":1611659564907,"results":"81","hashOfConfig":"44"},{"size":514,"mtime":1611583357661,"results":"82","hashOfConfig":"44"},{"size":245,"mtime":1611583357686,"results":"83","hashOfConfig":"44"},{"size":1290,"mtime":1611587635407,"results":"84","hashOfConfig":"44"},{"size":339,"mtime":1611650005171,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1djfqxv",{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/index.js",[],["180","181"],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/App.js",["182","183","184","185"],"import React, { useState, useEffect, useCallback } from 'react';\nimport './assets/css/App.css';\nimport './assets/css/Responsive.css';\nimport { Web3Provider } from '@ethersproject/providers';\nimport Web3Modal from 'web3modal';\nimport { getChainData } from './helpers/chain-utils';\nimport { getProviderOptions } from './constants/provider-options';\nimport Main from './components/Main';\nimport BarnBridgeToken from './constants/abis/BarnBridgeToken.json'\nimport {getContract} from './helpers/ethers'\nimport {BARN_PRIZE_POOL_ADDRESS, PRIZE_STRATEGY_CONTRACT_ADDRESS, BOND_TICKETS_CONTRACT_ADDRESS} from './constants/contracts'\nimport BarnPrizePool from './constants/abis/BarnPrizePool.json'\nimport PrizeStrategy from './constants/abis/PeriodicPrizeStrategy.json';\nimport ControlledToken from './constants/abis/ControlledToken.json';\n\nconst App = () => {\n\tconst [provider, setProvider] = useState(null);\n\tconst [connected, setConnected] = useState(false);\n\tconst [connectedNetwork, setConnectedNetwork] = useState('');\n\tconst [connectedWalletAddress, setConnectedWalletAddress] = useState('');\n\tconst [connectedWalletName, setConnectedWalletName] = useState('');\n\tconst [chainId, setChainId] = useState(1);\n\tconst [barnPrizePoolContract, setBarnPrizePoolContract] = useState(null)\n\tconst [bondTokenContract, setBondTokenContract] = useState(null);\n\tconst [bondTicketsContract, setBondTicketsContrat] = useState(null);\n\tconst [prizeStrategyContract, setPrizeStrategyContract] = useState(null);\n\n\tconst getNetwork = () => getChainData(chainId).network;\n\n\tconst web3Modal = new Web3Modal({\n\t\tnetwork: getNetwork(),\n\t\tcacheProvider: true,\n\t\tproviderOptions: getProviderOptions()\n\t  });\n\n\t\n \n\tuseEffect(() => {\n\t\tif (web3Modal.cachedProvider) {\n\t\t\tconnectWalletHandler()\n\t\t  }\n\t}, []);\n\n\tlet firstInit = true;\n\tconst connectWalletHandler = useCallback(async () => {\n\t\tif(!firstInit) {\n\t\t\tweb3Modal.clearCachedProvider();\n\t\t\t\n\t\t}\n\t\tfirstInit = false;\n\t\tlet newProvider =  await web3Modal.connect();\n\n\t\tconst library = new Web3Provider(newProvider);\n\t\tconst network = await library.getNetwork();\n\t\n\t\tconst address = newProvider.selectedAddress ? newProvider.selectedAddress : newProvider?.accounts[0];\n\n\t\tconst barnPrizePoolContractCode = await  library.getCode(BARN_PRIZE_POOL_ADDRESS);\n\t\tif(barnPrizePoolContractCode.length > 2) {\n\t\t\tconst newBarnPrizePoolContract = getContract(BARN_PRIZE_POOL_ADDRESS, BarnPrizePool.abi, library, address);\n\n\t\n\t\t\tconst bondTokenAddress = await newBarnPrizePoolContract.token();\n\t\t\n\t\t\tconst newBondTokenContract = getContract(bondTokenAddress, BarnBridgeToken.abi, library, address);\n\t\t\tconst newPrizeStrategyContract = getContract(PRIZE_STRATEGY_CONTRACT_ADDRESS, PrizeStrategy.abi, library, address);\n\t\t\tconst newBondTicketsContract = getContract(BOND_TICKETS_CONTRACT_ADDRESS, ControlledToken.abi, library, address);\n\n\t\t\tsetPrizeStrategyContract(newPrizeStrategyContract);\n\t\t\tsetBarnPrizePoolContract(newBarnPrizePoolContract);\n\t\t\tsetBondTokenContract(newBondTokenContract);\n\t\t\tsetBondTicketsContrat(newBondTicketsContract);\n\t\t}\n\t\t\n\n\t\tsetConnectedWalletAddress(address);\n\t\tsetConnectedNetwork(network.name);\n\t\tsetConnectedWalletName(library.connection.url === 'metamask' ? 'MetaMask' : 'WalletConnect')\n\t\tsetConnected(true);\n\t\tsetProvider(newProvider)\n\t\tawait subscribeToProviderEvents(newProvider);\n\n\t});\n\n\tconst disconnectWalletHandler = useCallback(async (provider) => {\n\n\t\tweb3Modal.clearCachedProvider();\n\t\t   \n\t\tlocalStorage.removeItem(\"WEB3_CONNECT_CACHED_PROVIDER\");\n\t\tlocalStorage.removeItem(\"walletconnect\");\n\n\n\t\tsetBarnPrizePoolContract(null);\n\t\tsetBondTokenContract(null);\n\t\tsetBondTicketsContrat(null);\n\t\tsetPrizeStrategyContract(null);\n\t\tsetConnectedWalletAddress(\"\");\n\t\tsetConnectedNetwork(null);\n\t\tsetConnectedWalletName(\"\");\n\t\tsetConnected(false);\n\t\tsetProvider(null)\t\t\n\t\t\n\t});\n\n\tconst changedAccount = (accounts) => {\n\t\tif(Array.isArray(accounts) && accounts.length >0) {\n\t\t\tsetConnectedWalletAddress(accounts[0]);\n\t\t} else {\n\t\t\tdisconnectWalletHandler()\n\t\t}\n\t}\n\n\tconst networkChanged = useCallback(async (provider) => {\n\t\tconst library = new Web3Provider(provider);\n\t\tconst network = await library.getNetwork();\n\t\tconst chainId = network.chainId;\n  \n\n\t\tsetChainId(chainId);\n\t\tsetConnectedNetwork(network.name);\n\t  });\n\tconst subscribeToProviderEvents = (provider) => {\n\n\t\tif(provider) {\n\t\t\tif (!provider.on) {\n\t\t\t\treturn;\n\t\t\t  }\n\n\t\t\t  provider.on(\"accountsChanged\", changedAccount);\n\t\t\t  provider.on(\"disconnect\", disconnect);\n\t\t\t  provider.on(\"networkChanged\", () => networkChanged(provider));\n\t\t}\n\t\t\n\t};\n\tconst disconnect = async (err) => {\n\t\tdisconnectWalletHandler();\n\t  }\n\n\n\treturn (\n\t\t<Main \n\t\t\tbondTicketsContract={bondTicketsContract}\n\t\t\tprizeStrategyContract={prizeStrategyContract}\n\t\t\tbarnPrizePoolContract={barnPrizePoolContract}\n\t\t\tbondTokenContract={bondTokenContract}\n\t\t\tprovider={provider} \n\t\t\tconnectedNetwork={connectedNetwork} \n\t\t\tconnectedWalletAddress={connectedWalletAddress}\n\t\t\tconnectedWalletName={connectedWalletName}\n\t\t\tconnected={connected}\n\t\t\tdisconnectWalletHandler={disconnectWalletHandler}\n\t\t\tconnectWalletHandler={connectWalletHandler}\n\t\t></Main>\n\t)\n\n}\n\nexport default App;\n\n\n\n\n\n","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/reportWebVitals.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/ContextAPI.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Pools.js",["186","187","188","189"],"import React, {useEffect, useState, useContext} from 'react'\nimport AppContext from '../../ContextAPI';\nimport RewardPool from './RewardPool/RewardPool';\n\nconst Pools = () => {\n\n\n    return (\n            <div className='lottery-pools-container'>\n                <h1 className='title'>Lottery Pools</h1>\n                <div className='lottery-pools-section'>\n                    <RewardPool />\n                </div>\n            </div>    )   \n}\n\nexport default Pools;","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Sidebar/Sidebar.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/Modal.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/MyAccount/MyAccount.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/LeaderBoard/LeaderBoard.js",["190","191"],"import React, {useContext} from 'react'\nimport Table from '../Table/Table'\nimport logo from '../../assets/images/onlyLogo.svg'\nimport { useHistory } from 'react-router-dom'\nimport AppContext from '../../ContextAPI'\n\nconst LeaderBoard = () => {\n    const history = useHistory();\n    const { setSelectedMenuItem } = useContext(AppContext);\n\n    const rp_data = React.useMemo(() => [\n        {\n            col1: '10',\n            col2: '13.48 BOND',\n            col3: 'Current...',\n        },\n        {\n            col1: '9',\n            col2: '13.48 BOND',\n            col3: 'Dec 25th, 2020, 21:11 EST',\n        },\n        {\n            col1: '8',\n            col2: '13.48 BOND',\n            col3: 'Dec 18th, 2020, 21:08 EST',\n        },\n        {\n            col1: '7',\n            col2: '13.48 BOND',\n            col3: 'Dec 11th, 2020, 21:10 EST',\n        },\n        {\n            col1: '6',\n            col2: '13.48 BOND',\n            col3: 'Dec 4th, 2020, 21:12 EST',\n        },\n        {\n            col1: '5',\n            col2: '13.48 BOND',\n            col3: 'Nov 27th, 2020, 21:26 EST',\n        },\n        {\n            col1: '4',\n            col2: '14.48 BOND',\n            col3: 'Nov 25th, 2020, 21:26 EST',\n        },\n        {\n            col1: '3',\n            col2: '14.48 BOND',\n            col3: 'Nov 25th, 2020, 21:26 EST',\n        },\n        {\n            col1: '2',\n            col2: '14.48 BOND',\n            col3: 'Nov 25th, 2020, 21:26 EST',\n        },\n        {\n            col1: '1',\n            col2: '14.48 BOND',\n            col3: 'Nov 25th, 2020, 21:26 EST',\n        },\n    ], [])\n\n    const sp_data = React.useMemo(() => [\n        {\n            col1: '3',\n            col2: '13.48 BOND',\n            col3: 'Current...',\n        },\n        {\n            col1: '2',\n            col2: '13.48 BOND',\n            col3: 'Dec 25th, 2020, 21:11 EST',\n        },\n        {\n            col1: '1',\n            col2: '13.48 BOND',\n            col3: 'Dec 18th, 2020, 21:08 EST',\n        },\n    ], [])\n    \n    const rp_columns = React.useMemo(() => [\n        {\n            Header: '#',\n            accessor: 'col1',\n        },\n        {\n            Header: 'Prize',\n            accessor: 'col2',\n        },\n        {\n            Header: 'Awarded on',\n            accessor: 'col3',\n            Cell: ({ row }) => (<div className='view-details'>{row.values.col3} <button onClick={() => { setSelectedMenuItem(0); history.push(`/community-reward-pool/prize/${row.values.col1}`) }}>View details</button></div> )\n        },\n    ], [history, setSelectedMenuItem])\n\n    const sp_columns = React.useMemo(() => [\n        {\n            Header: '#',\n            accessor: 'col1',\n        },\n        {\n            Header: 'Prize',\n            accessor: 'col2',\n        },\n        {\n            Header: 'Awarded on',\n            accessor: 'col3',\n            Cell: ({ row }) => (<div className='view-details'>{row.values.col3} <button onClick={() => { setSelectedMenuItem(0); history.push(`/dao-staking-pool/prize/${row.values.col1}`) }}>View details</button></div> )\n        },\n    ], [history, setSelectedMenuItem])\n\n    return (\n       <div className='leaderboard-section'>\n            <h1 className='leaderboard-title'>Leaderboard</h1>\n\n            <div className='rp-leaderboard'>\n                <h3 className='leaderboard-desc'>\n                    <img src={logo} alt='Community Reward Pool' /> Community Reward Pool\n                </h3>\n                <Table title='Community Reward Pool Winners' data={rp_data} columns={rp_columns} pageSize={6} isLeaderboardTable={true} isHashtag={true} />\n            </div>\n\n        </div>\n    )\n}\n\nexport default LeaderBoard;","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Header/Header.js",["192"],"import React, {useState, useContext, useEffect, useRef} from 'react'\nimport MobileSidebar from '../Mobile/MobileSidebar';\nimport appLogo from '../../assets/images/app-logo.svg';\nimport noLossLotteryImg from '../../assets/images/no-loss-lottery.svg';\nimport hamburgerIcon from '../../assets/images/hamburger.svg';\nimport prizeImg from '../../assets/images/prize.svg';\nimport statusImg from '../../assets/images/status.svg';\nimport walletImg from '../../assets/images/wallet.svg';\nimport networkImg from '../../assets/images/network.svg';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../../ContextAPI';\nimport { capitalize } from '../../helpers/format-utils';\n\nconst Header = () => {\n    const [openDropdown, setOpenDropdown] = useState(false);\n    const { connected, provider, connectedWalletName, toggleSidebar, setToggleSidebar, wallet, setSelectedMenuItem, connectWalletHandler, connectedWalletAddress, connectedNetwork, disconnectWalletHandler } = useContext(AppContext);\n    const ref = useRef(null);\n\n    const handleClickOutside = (event) => {\n        if (!event.target.classList.contains('dropdownOpened')) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                setOpenDropdown(false);\n            }\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside, true);\n        return () => {\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n    })\n\n    return (\n        <header>\n            <div className='app-logo'>\n                <Link to='/' onClick={() => setSelectedMenuItem(0)}>\n                    <img src={appLogo} alt='app-logo' />\n                </Link>\n            </div>\n            <div className='no-loss-lottery'>\n                <img src={noLossLotteryImg} alt='No Loss Lottery' />\n                <h2>No Loss Lottery</h2>\n            </div>\n            <div className='connect-wallet'>\n                {!connected ?\n                    <button onClick={connectWalletHandler}>Connect wallet</button> :\n                    <div className='connected'>\n                        <button onClick={() => setOpenDropdown(!openDropdown)} className={openDropdown ? 'dropdownOpened' : ''}>\n                            <img src={prizeImg} alt='Prize' /> {connectedWalletAddress.substring(0,5) + \"...\" + connectedWalletAddress.substring(connectedWalletAddress.length - 6, connectedWalletAddress.length)}\n                        </button>\n                        {openDropdown && \n                            <div ref={ref} className='dropdown'>\n                                <div className='dropdown-row'>\n                                    <div className='dropdown-text'>\n                                        <img src={statusImg} alt='Status' /> Status\n                                    </div>\n                                    <div className='status'>Connected</div>\n                                </div>\n                                <div className='dropdown-row'>\n                                    <div className='dropdown-text'>\n                                        <img src={walletImg} alt='Wallet' /> Wallet\n                                    </div>\n                                    <div className='wallet'>{connectedWalletName}</div>\n                                </div>\n                                <div className='dropdown-row'>\n                                    <div className='dropdown-text'>\n                                        <img src={networkImg} alt='Network' /> Network\n                                    </div>\n                                    <div className='network'>{capitalize(connectedNetwork)}</div>\n                                </div>\n                                <div className='disconnect-button'>\n                                    <button onClick={() => disconnectWalletHandler(provider)}>Disconnect</button>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                }\n            </div>\n\n            <div className='mobile-menu'>\n                <button className='open-sidebar' onClick={() => setToggleSidebar(!toggleSidebar)}>\n                    <img src={hamburgerIcon} alt='Hamburger Icon' />\n                </button>\n                {toggleSidebar &&\n                    <MobileSidebar />\n                }\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/DepositComplete.js",["193","194"],"import React, {useContext, useState, useEffect} from 'react';\nimport AppContext from '../../ContextAPI';\nimport Countdown from '../Pools/Components/Countdown';\nimport PoolBoxHeader from '../Pools/Components/PoolBoxHeader';\nimport { ethers } from 'ethers';\n\nconst DepositComplete = () => {\n    const { ticketsBalance } = useContext(AppContext);\n\n\n    return (\n      \n                <div className='pools-box'>\n                    <PoolBoxHeader title='Deposit Complete' />\n                    <div className='box-content'>\n                        <div className='box-inner'>\n                            <h1 className='modal-title'>Deposit Complete</h1>\n                        {ticketsBalance ? <h4 className='modal-description'>You got total of {ethers.utils.formatEther(ticketsBalance)} tickets</h4> : null}\n                            <p className='prize-will-be-awarded-in'>The prize will be awarded in:</p>\n                            <Countdown/>\n                        </div>\n                    </div>\n                </div>\n\n    )\n}\n\nexport default DepositComplete\n","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/ConnectWallet.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/ConfirmDeposit.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/PrizeAwarded.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/GetTickets.js",["195","196","197"],"import React, {useContext, useEffect, useState} from 'react';\nimport PoolBoxHeader from '../Pools/Components/PoolBoxHeader';\nimport walletIcon from '../../assets/images/wallet-sm.svg';\nimport logo from '../../assets/images/onlyLogo.svg';\nimport closeIcon from '../../assets/images/close.svg';\nimport minusIcon from '../../assets/images/minus.svg';\nimport AppContext from '../../ContextAPI';\nimport validator from 'validator';\nimport * as ethers from 'ethers';\nimport EtherscanLink from '../Shared/EtherscanLink';\nimport { getProviderDescription } from 'web3modal';\n\n\n\n\nconst GetTickets = () => {\n    const {\n        bondAllowance,\n        allowBondHandler,\n        bondBalance,\n        connected,\n        ticketDepositHandler,\n        getTicketsLoading,\n        getTicketsTxId,\n        totalTicketAmount,\n        ticketsBalance\n    } = useContext(AppContext);\n\n\tconst [tokenIsEnabled, setTokenIsEnabled] = useState(false);\n\tconst [maxAmountSelected, setMaxAmountSelected] = useState(false);\n    const [inputValid, setInputValid] = useState(false);\n    const [depositAmount, setDepositAmount] = useState(0);\n\n    useEffect(() => {\n        if(bondAllowance ){\n            setTokenIsEnabled(bondAllowance.gt(0) )\n        }\n    },[bondAllowance])\n    const handleTicketInputChange = (value) => {\n        \n        if(value === '' || (validator.isNumeric(value) && !value.startsWith('0'))) {\n            setDepositAmount(value);\n            const balanceInBigNumber = ethers.utils.parseEther(value || '0');\n            const hasEnoughBond = ethers.utils.parseEther(value || '0').lte(bondBalance);\n            setInputValid(balanceInBigNumber.gt('0') && hasEnoughBond);\n            if(hasEnoughBond) {\n                setMaxAmountSelected(balanceInBigNumber.eq(ethers.BigNumber.from(bondBalance)));\n            }\n        }\n    \n    };\n\n    const getOdds = () => {\n\n        const currentTotalTickets = +depositAmount + +ethers.utils.formatEther(totalTicketAmount);\n        const currentTicketsBalance = +depositAmount +  +ethers.utils.formatEther(ticketsBalance);\n        return ((currentTotalTickets ? currentTotalTickets : 1)/ (currentTicketsBalance ? currentTicketsBalance : 1)).toFixed(2);\n    }\n    return (\n        <div className='pools-box'>\n            <PoolBoxHeader title='Get Tickets' />\n            <div className='box-content'>\n                <div className='box-inner'>\n                    <h1 className='modal-title'>Get Tickets</h1>\n                    <h4 className='modal-description'>1 BOND = 1 ticket</h4>\n                    {connected &&\n                        <div className='token'>\n                            <h1>\n                                <img src={logo} alt='App Logo' /> Bond\n                            </h1>\n                            {getTicketsLoading ? <EtherscanLink txId={getTicketsTxId}> </EtherscanLink> : null }\n                            <h2>{ tokenIsEnabled ? 'Token enabled' : 'Enable token'}\n                                <input\n                                    checked={tokenIsEnabled}\n                                    onChange={allowBondHandler}\n                                    disabled={tokenIsEnabled}\n                                    className='switch-checkbox'\n                                    id={'switch-new'+'RP'}\n                                    type='checkbox'\n                                />\n                                <label\n                                    style={{ background:  tokenIsEnabled  && '#28D879' }}\n                                    className='switch-label'\n                                    htmlFor={'switch-new'+\"RP\"}\n                                >\n                                    <span className='switch-button'>\n                                        {\n                                            (tokenIsEnabled ? <img src={minusIcon} alt='Minus' /> : <img src={closeIcon} alt='Close' />) \n                                        }\n                                    </span>\n                                </label>\n                            </h2>\n                        </div>\n                    }\n                    <div className='ticket-amount'>\n                        <div className='ticket-amount-label'>\n                            <div>Ticket amount:</div>\n                            {connected &&\n                                <div>\n                                    <img src={walletIcon} alt='Wallet' /> {`${ethers.utils.formatEther(bondBalance)} BOND`}\n                                </div>\n                            }\n                        </div>\n                        <div className='ticket-amount-input'>\n                            <input\n                                type='text'\n                                disabled={!(connected  && tokenIsEnabled ) }\n                                onChange={ (event) => {\n                                    if(event && event.target) {\n                                            handleTicketInputChange(event.target.value)                        \n                                    }\n                            \n                                }\n                                   \n                                }\n                                value={depositAmount}\n                            />\n                            {connected ?\n                                (tokenIsEnabled && !maxAmountSelected) && <button className='max-btn' onClick={() => { setDepositAmount(+ethers.utils.formatEther(bondBalance)); setInputValid(true); setMaxAmountSelected(true) }}>MAX</button> : null\n                            }\n                        </div>\n                    </div>\n                    {\n                        totalTicketAmount !== undefined && ticketsBalance !== undefined ?  \n                        <div className='odds'>\n                            { depositAmount > 0 ? <div>New odds of winning:</div> : <div>Odds of winning:</div>}\n                            \n                            <div>1 in {getOdds()}</div>\n                        </div>\n                        : null\n                    }\n                   \n                </div>\n            </div>\n\n            <div className='continue-btn'>\n                {<button onClick={() => ticketDepositHandler(depositAmount)} disabled={!inputValid}>Deposit</button>}\n            </div>\n        </div>\n    )\n}\n\nexport default GetTickets\n","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/ProgressBar.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/AboutPool.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/Countdown.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/PoolBoxStats.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/PoolBoxHeader.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Mobile/MobileSidebar.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Mobile/MenuItems.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Table/Table.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/Components/PoolBoxContent.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/Router.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/WithdrawComplete.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/Withdraw.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Modal/ConfirmWithdraw.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/constants/provider-options.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/chain-utils.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/chains.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/constants/contracts.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/ethers.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPool.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPoolPrizeDetails.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPoolPlayerDetails.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Pools/RewardPool/RewardPoolDetails.js",["198","199"],"import React, {useEffect, useState, useContext} from 'react'\nimport { Link, useHistory } from 'react-router-dom';\nimport onlyLogo from '../../../assets/images/onlyLogo.svg';\nimport arrowToRight from '../../../assets/images/arrowToRight.svg';\nimport Countdown from '../Components/Countdown';\nimport ProgressBar from '../Components/ProgressBar';\nimport PoolBoxHeader from '../Components/PoolBoxHeader';\nimport AboutPool from '../Components/AboutPool';\nimport PoolBoxStats from '../Components/PoolBoxStats';\nimport AppContext from '../../../ContextAPI';\nimport presentImg from '../../../assets/images/present.svg';\nimport timeImg from '../../../assets/images/time.svg';\nimport bigWalletImg from '../../../assets/images/wallet-lg.svg';\nimport Table from '../../Table/Table';\nimport * as ethers from 'ethers';\nimport { formatEtherWithDecimals } from '../../../helpers/format-utils';\n\nconst RewardPoolDetails = () => {\n    const {  percentageTimePassed, setSelectedMenuItem, totalTicketAmount, currentWeekPrice } = useContext(AppContext);\n    const history = useHistory();\n\n    const PLACEHOLDER_PLAYERS = '3,045';\n    const PLACEHOLDER_YIELD_SOURCE = 'BarnBridge DAO Staking';\n    const PLACEHOLDER_DESCRIPTION1 = 'The Community Reward Pool is set up by BOND founders and the weekly prize in this pool is provided from BOND Community Rewards.';\n    const PLACEHOLDER_DESCRIPTION2 = 'Each week the protocol randomly chooses one winner who gets all the sum of the prize. The staked amount of BOND tokens can be withdrawn at any time without any time lockups.';\n    const PLACEHOLDER_PAST_FIVE_PRIZES = [\n        {\n            id: 1,\n            date: 'Jan 1st',\n            prize: '3,196.90'\n        },\n        {\n            id: 2,\n            date: 'Jan 1st',\n            prize: '3,196.90'\n        },\n        {\n            id: 3,\n            date: 'Jan 1st',\n            prize: '3,196.90'\n        },\n        {\n            id: 4,\n            date: 'Jan 1st',\n            prize: '3,196.90'\n        },\n        {\n            id: 5,\n            date: 'Jan 1st',\n            prize: '3,196.90'\n        },\n    ];\n\n    const PLACEHOLDER_DATA = React.useMemo(() => [\n        {\n            col1: '0X2117C37A65AD3C0489682386F7D81D4C6D08B3C8',\n            col2: '198,249.86',\n            col3: '1 in 2.87',\n        },\n        {\n            col1: '0X2117C37A65AD3C0489682386F7D81D4C6D08B3C8',\n            col2: '198,249.86',\n            col3: '1 in 2.87',\n        },\n        {\n            col1: '0X2117C37A65AD3C0489682386F7D81D4C6D08B3C8',\n            col2: '198,249.86',\n            col3: '1 in 2.87',\n        },\n        {\n            col1: '0X2117C37A65AD3C0489682386F7D81D4C6D08B3C8',\n            col2: '198,249.86',\n            col3: '1 in 2.87',\n        },\n        {\n            col1: '0X2117C37A65AD3C0489682386F7D81D4C6D08B3C8',\n            col2: '198,249.86',\n            col3: '1 in 2.87',\n        },\n        {\n            col1: '0X2117C37A65AD3C0489682386F7D81D4C6D08B3C8',\n            col2: '198,249.86',\n            col3: '1 in 2.87',\n        },\n        {\n            col1: '0X2117C37A65AD3C0489682386F7D81D4C6D08B3C8',\n            col2: '198,249.86',\n            col3: '1 in 2.87',\n        },\n        {\n            col1: '0X2117C37A65AD3C0489682386F7D81D4C6D08B3C8',\n            col2: '198,249.86',\n            col3: '1 in 2.87',\n        },\n        {\n            col1: '0X2117C37A65AD3C0489682386F7D81D4C6D08B3C8',\n            col2: '198,249.86',\n            col3: '1 in 2.87',\n        },\n        {\n            col1: '0X2117C37A65AD3C0489682386F7D81D4C6D08B3C8',\n            col2: '198,249.86',\n            col3: '1 in 2.87',\n        },\n    ], [])\n\n    const PLACEHOLDER_COLUMNS = React.useMemo(() => [\n        {\n            Header: 'Address',\n            accessor: 'col1',\n            Cell: ({ row }) => (row.values.col1.substring(0,6) + '..' + row.values.col1.substring(row.values.col1.length - 4))\n        },\n        {\n            Header: 'Tickets',\n            accessor: 'col2',\n        },\n        {\n            Header: 'Odds',\n            accessor: 'col3',\n            Cell: ({ row }) => (<div className='view-details'>{row.values.col3} <button onClick={() => { setSelectedMenuItem(0); history.push(`/community-reward-pool/player/${row.values.col1.toLowerCase()}`) }}>View player</button></div> )\n        },\n    ], [history, setSelectedMenuItem])\n\n    \n    return (\n        <div className='reward-pool-details-section'>\n            <h1 className='reward-pool-details-title'>\n                <img src={onlyLogo} alt='Community Reward Pool' /> Community Reward Pool\n            </h1>\n            <div className='breadcrumbs'>\n                <Link to='/'>Lottery Pools</Link>\n                <img src={arrowToRight} alt='Right Arrow' />\n                <label>Community Reward Pool</label>\n            </div>\n\n            <div className='pools-box-container'>\n                <div className='pools-box'>\n                    <PoolBoxHeader title='Current Week Prize' />\n                    <div className='pools-box-content required-changes'>\n                        <div className='pools-box-inner required-changes'>\n                            <h1 className='pools-box-inner-title required-changes'>\n                                <img src={presentImg} alt='Current Week Prize' /> Current Week Prize\n                            </h1>\n                            <div className='pools-box-screen required-changes'>\n                                <div className='pools-box-screen-inner'>\n                                    {`${formatEtherWithDecimals(currentWeekPrice, 2)} bond`}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='pools-box'>\n                    <PoolBoxHeader title='Time Left' />\n                    <div className='pools-box-content required-changes'>\n                        <div className='pools-box-inner required-changes'>\n                            <h1 className='pools-box-inner-title required-changes'>\n                                <img src={timeImg} alt='Time Left' /> Time Left\n                            </h1>\n                            <ProgressBar percentageTimePassed={percentageTimePassed} />\n                            <Countdown />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className='pools-box required-changes'>\n                <PoolBoxHeader title='Pool Information' />\n                <PoolBoxStats\n                    winners=\"1\"\n                    players={PLACEHOLDER_PLAYERS}\n                    totalTickets={ethers.utils.formatEther(totalTicketAmount)}\n                />\n            </div>\n\n            <div className='pools-box-container'>\n                <div className='pools-box yield-source'>\n                    <PoolBoxHeader title='Yield source' />\n                    <div className='pools-box-content required-changes'>\n                        <div className='pools-box-inner required-changes'>\n                            <h1 className='pools-box-inner-title required-changes'>\n                                <img src={bigWalletImg} alt='Yield source' /> Yield source\n                            </h1>\n                            <div className='pools-box-screen required-changes'>\n                                <h1 className='yield-source-title'>\n                                    <img src={onlyLogo} alt='BarnBridge DAO Staking' /> {PLACEHOLDER_YIELD_SOURCE}\n                                </h1>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='pools-box past-five-prizes'>\n                    <PoolBoxHeader title='Past 5 prizes' />\n                    <div className='pools-box-content required-changes'>\n                        <div className='pools-box-inner required-changes'>\n                            <h1 className='pools-box-inner-title required-changes'>\n                                <img src={presentImg} alt='Past 5 prizes' /> Past 5 prizes\n                            </h1>\n                            <div className='pools-box-screen required-changes'>\n                                {PLACEHOLDER_PAST_FIVE_PRIZES.map(item => {\n                                    return (\n                                        <div key={item.id} className='past-prizes'>\n                                            <div>{item.date}</div>\n                                            <div></div>\n                                            <div>${item.prize}</div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className='players'>\n                <Table title='Players' data={PLACEHOLDER_DATA} columns={PLACEHOLDER_COLUMNS} pageSize={6} isLeaderboardTable={true} isAddress={true} />\n            </div>\n\n            <div className='pools-box'>\n                <PoolBoxHeader title='About the Pool' />\n                <AboutPool\n                    title='About the Pool'\n                    description={PLACEHOLDER_DESCRIPTION1}\n                    more={PLACEHOLDER_DESCRIPTION2}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default RewardPoolDetails\n","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Main.js",["200","201","202","203","204","205","206","207","208","209"],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Shared/EtherscanLink.js",[],"/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/date.js",["210"],"export const getUtcTimestamp = () => {\n    let now = new Date;\n    return Date.UTC(now.getUTCFullYear(),now.getUTCMonth(), now.getUTCDate() , \n      now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds(), now.getUTCMilliseconds()) / 1000;\n}","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/components/Shared/CountdownPercentageUpdater.js",["211","212","213"],"import React, {useEffect, useState, useContext} from 'react'\nimport AppContext from '../../ContextAPI';\n\n\n\nconst CountdownPercantageUpdater = () => {\n\n    const { setNewTime, prizePeriodEnds, prizePeriodStartedAt, prizePoolRemainingSeconds, countdown, setCountdown, percentageTimePassed, setPercentageTimePassed} = useContext(AppContext);\n\n\n    useEffect(() => {\n        if(prizePeriodEnds && prizePeriodStartedAt && prizePoolRemainingSeconds && prizePeriodEnds.gt(0) && prizePeriodStartedAt.gt(0)) {\n            const interval = setInterval(() => {\n                  setNewTime(setCountdown);\n            }, 1000);\n    \n            if (percentageTimePassed >= 100) {\n                clearInterval(interval);\n            } \n\n            const totalSeconds = prizePeriodEnds.sub(prizePeriodStartedAt)\n            const secondsPassed = totalSeconds.sub(prizePoolRemainingSeconds);\n        \n            setPercentageTimePassed(\n                Math.floor(secondsPassed.toNumber() / totalSeconds.toNumber() * 100)\n            );\n    \n            return () => {\n                clearInterval(interval);\n            };\n        }\n        \n    }, [countdown, percentageTimePassed, prizePeriodStartedAt, prizePeriodEnds, setNewTime]);\n\n    return (null)\n};\nexport default CountdownPercantageUpdater;","/Users/stelyangeorgiev/Documents/Coding/BarnBridge/bond-bet/src/helpers/format-utils.js",[],{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":42,"column":5,"nodeType":"220","endLine":42,"endColumn":7,"suggestions":"221"},{"ruleId":"218","severity":1,"message":"222","line":45,"column":31,"nodeType":"223","endLine":45,"endColumn":42},{"ruleId":"218","severity":1,"message":"222","line":85,"column":34,"nodeType":"223","endLine":85,"endColumn":45},{"ruleId":"218","severity":1,"message":"222","line":113,"column":25,"nodeType":"223","endLine":113,"endColumn":36},{"ruleId":"224","severity":1,"message":"225","line":1,"column":16,"nodeType":"223","messageId":"226","endLine":1,"endColumn":25},{"ruleId":"224","severity":1,"message":"227","line":1,"column":27,"nodeType":"223","messageId":"226","endLine":1,"endColumn":35},{"ruleId":"224","severity":1,"message":"228","line":1,"column":37,"nodeType":"223","messageId":"226","endLine":1,"endColumn":47},{"ruleId":"224","severity":1,"message":"229","line":2,"column":8,"nodeType":"223","messageId":"226","endLine":2,"endColumn":18},{"ruleId":"224","severity":1,"message":"230","line":64,"column":11,"nodeType":"223","messageId":"226","endLine":64,"endColumn":18},{"ruleId":"224","severity":1,"message":"231","line":98,"column":11,"nodeType":"223","messageId":"226","endLine":98,"endColumn":21},{"ruleId":"224","severity":1,"message":"232","line":16,"column":88,"nodeType":"223","messageId":"226","endLine":16,"endColumn":94},{"ruleId":"224","severity":1,"message":"227","line":1,"column":28,"nodeType":"223","messageId":"226","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"225","line":1,"column":38,"nodeType":"223","messageId":"226","endLine":1,"endColumn":47},{"ruleId":"224","severity":1,"message":"233","line":11,"column":10,"nodeType":"223","messageId":"226","endLine":11,"endColumn":32},{"ruleId":"234","severity":1,"message":"235","line":78,"column":53,"nodeType":"236","messageId":"237","endLine":78,"endColumn":54},{"ruleId":"234","severity":1,"message":"235","line":84,"column":58,"nodeType":"236","messageId":"237","endLine":84,"endColumn":59},{"ruleId":"224","severity":1,"message":"225","line":1,"column":16,"nodeType":"223","messageId":"226","endLine":1,"endColumn":25},{"ruleId":"224","severity":1,"message":"227","line":1,"column":27,"nodeType":"223","messageId":"226","endLine":1,"endColumn":35},{"ruleId":"218","severity":1,"message":"238","line":53,"column":15,"nodeType":"239","endLine":65,"endColumn":6},{"ruleId":"218","severity":1,"message":"240","line":65,"column":8,"nodeType":"220","endLine":65,"endColumn":69,"suggestions":"241"},{"ruleId":"218","severity":1,"message":"238","line":67,"column":15,"nodeType":"239","endLine":73,"endColumn":6},{"ruleId":"218","severity":1,"message":"238","line":75,"column":15,"nodeType":"239","endLine":88,"endColumn":6},{"ruleId":"224","severity":1,"message":"242","line":82,"column":20,"nodeType":"223","messageId":"226","endLine":82,"endColumn":26},{"ruleId":"218","severity":1,"message":"222","line":89,"column":30,"nodeType":"223","endLine":89,"endColumn":41},{"ruleId":"218","severity":1,"message":"222","line":136,"column":34,"nodeType":"223","endLine":136,"endColumn":45},{"ruleId":"224","severity":1,"message":"243","line":141,"column":15,"nodeType":"223","messageId":"226","endLine":141,"endColumn":22},{"ruleId":"218","severity":1,"message":"222","line":151,"column":35,"nodeType":"223","endLine":151,"endColumn":46},{"ruleId":"224","severity":1,"message":"244","line":157,"column":15,"nodeType":"223","messageId":"226","endLine":157,"endColumn":23},{"ruleId":"245","severity":1,"message":"246","line":2,"column":15,"nodeType":"247","messageId":"248","endLine":2,"endColumn":23,"fix":"249"},{"ruleId":"224","severity":1,"message":"250","line":1,"column":8,"nodeType":"223","messageId":"226","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"227","line":1,"column":27,"nodeType":"223","messageId":"226","endLine":1,"endColumn":35},{"ruleId":"218","severity":1,"message":"251","line":33,"column":8,"nodeType":"220","endLine":33,"endColumn":92,"suggestions":"252"},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'connectWalletHandler' and 'web3Modal.cachedProvider'. Either include them or remove the dependency array.","ArrayExpression",["255"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'useEffect' is defined but never used.","unusedVar","'useState' is defined but never used.","'useContext' is defined but never used.","'AppContext' is defined but never used.","'sp_data' is assigned a value but never used.","'sp_columns' is assigned a value but never used.","'wallet' is assigned a value but never used.","'getProviderDescription' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'bondTicketsContract'. Either include it or remove the dependency array.",["256"],"'blocks' is assigned a value but never used.","'deposit' is assigned a value but never used.","'withdraw' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"257","text":"258"},"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'prizePoolRemainingSeconds', 'setCountdown', and 'setPercentageTimePassed'. Either include them or remove the dependency array.",["259"],"no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},[61,61],"()",{"desc":"264","fix":"265"},"Update the dependencies array to be: [connectWalletHandler, web3Modal.cachedProvider]",{"range":"266","text":"267"},"Update the dependencies array to be: [connectedWalletAddress, bondTokenContract, connectedNetwork, bondTicketsContract]",{"range":"268","text":"269"},"Update the dependencies array to be: [countdown, percentageTimePassed, prizePeriodStartedAt, prizePeriodEnds, setNewTime, prizePoolRemainingSeconds, setPercentageTimePassed, setCountdown]",{"range":"270","text":"271"},[1772,1774],"[connectWalletHandler, web3Modal.cachedProvider]",[2678,2739],"[connectedWalletAddress, bondTokenContract, connectedNetwork, bondTicketsContract]",[1139,1223],"[countdown, percentageTimePassed, prizePeriodStartedAt, prizePeriodEnds, setNewTime, prizePoolRemainingSeconds, setPercentageTimePassed, setCountdown]"]